from CondCore.DBCommon.CondDBSetup_cfi import *

# loading magnetic field and geometry
#process.load("Configuration.Geometry.GeometryRecoDB_cff")

#process.load('Configuration.Geometry.GeometryExtended_cff')
#process.TrackerTopologyEP = cms.ESProducer("TrackerTopologyEP")
process.load('Configuration/Geometry/GeometryRecoDB_cff')

#Tracker
from RecoTracker.GeometryESProducer.TrackerRecoGeometryESProducer_cfi import *

#Muon
from Geometry.MuonNumbering.muonNumberingInitialization_cfi import *
from RecoMuon.DetLayers.muonDetLayerGeometry_cfi import *

#  Alignment
from Geometry.TrackerGeometryBuilder.idealForDigiTrackerGeometry_cff import *
from Geometry.CSCGeometryBuilder.idealForDigiCscGeometry_cff import *
from Geometry.DTGeometryBuilder.idealForDigiDtGeometry_cff import *
#process.load("Configuration.StandardSequences.MagneticField_cff")
process.load("Configuration.StandardSequences.MagneticField_0T_cff")  ## FOR 0T

# loading the alignment producer
process.load("Alignment.CommonAlignmentProducer.AlignmentProducer_cff")

# loading DB constants 
# *WARNING* - the standard file doesn't work (gives too many "SiStripPedestalsFakeSource" rcds) 
# comment out that line in standard file ... an example is given in release of HIPAlignmentAlgorithm ("FrontierConditions_GlobalTag_cff.py")
#process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_cff")
process.load("Configuration.StandardSequences.FrontierConditions_GlobalTag_condDBv2_cff")

#process.GlobalTag.globaltag='GR_P_V54'
if 'COSMICS'=='<FLAG>':
   process.GlobalTag.globaltag='GR_P_V56'
else :
   process.GlobalTag.globaltag='GR_E_V48'
 
process.load("FWCore.MessageService.MessageLogger_cfi")
process.MessageLogger.cerr.FwkReport.reportEvery = 10000

# configure magnetic field
# process.load("Configuration.StandardSequences.MagneticField_38T_cff")

# configure the database file - use survey one for default
from CondCore.DBCommon.CondDBSetup_cfi import *

# ########## Ideal Alignment 
# process.trackerAlignment = cms.ESSource("PoolDBESSource",
#                                         CondDBSetup,	
#                                         timetype = cms.string('runnumber'),
#                                         toGet = cms.VPSet(cms.PSet(record = cms.string('TrackerAlignmentRcd'),
#                                                                    tag = cms.string('TrackerIdealGeometry210_mc')
#                                                                    )
#                                                           ),
#                                         connect = cms.string('frontier://FrontierProd/CMS_COND_31X_FROM21X')
#                                         )

# process.es_prefer_trackerAlignment = cms.ESPrefer("PoolDBESSource", "trackerAlignment")

process.GlobalTag.toGet = cms.VPSet(
   cms.PSet(record = cms.string('TrackerAlignmentRcd'),
            tag = cms.string('Alignments'),
            connect = cms.untracked.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/dmcinern/CMSSW_7_4_4/src/Alignment/HIPAlignmentAlgorithm/dbfiles/mp1757.db')
            ),
   cms.PSet(record = cms.string('TrackerSurfaceDeformationRcd'),
            tag = cms.string('Deformations'),
            connect = cms.untracked.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/hroskes/CMSSW_7_4_4/src/Alignment/HIPAlignmentAlgorithm/dbfiles/mp1744.db')
            ),
   cms.PSet(record = cms.string('TrackerAlignmentErrorExtendedRcd'),
            tag = cms.string('TrackerAlignmentExtendedErr_2009_v2_express_IOVs'),
            connect = cms.untracked.string('frontier://FrontierProd/CMS_CONDITIONS')
            ),
   cms.PSet(record = cms.string('GlobalPositionRcd'),
            tag = cms.string('GlobalAlignment'),
            connect = cms.untracked.string('sqlite_file:/afs/cern.ch/cms/CAF/CMSALCA/ALCA_TRACKERALIGN2/HIP/xiaomeng/CMSSW_7_4_0_pre6/src/Alignment/HIPAlignmentAlgorithm/GR_P_V49_GP.db')
            ),
	 cms.PSet(record = cms.string("SiPixelTemplateDBObjectRcd"),
          tag = cms.string("SiPixelTemplateDBObject_0T_2015_v1_hltvalidation"),
          connect = cms.untracked.string("frontier://FrontierProd/CMS_CONDITIONS"),
          label = cms.untracked.string("0T")
         )
   )

process.AlignmentProducer.applyDbAlignment = True


### Set parameters to align (all modules in this example)

process.AlignmentProducer.ParameterBuilder.Selector = cms.PSet(
                                                    alignParams = cms.vstring(
                                                                            'TrackerTPBModule,111111',
                                                                            'TrackerTPEModule,111111',
										  #'TrackerTIBModuleUnit,101111',
										  #'TrackerTOBModuleUnit,101111',
										  #'TrackerTIDModuleUnit,111111',
										  #'TrackerTECModuleUnit,111111'
										  'TrackerTPBHalfBarrel,111111',
										  'TrackerTPEHalfDisk,111111',
										  'TrackerTIBHalfBarrel,111111',
										  'TrackerTOBHalfBarrel,111111',
										  'TrackerTIDEndcap,111111',
										  'TrackerTECEndcap,111111'
                                                                 ),
)

